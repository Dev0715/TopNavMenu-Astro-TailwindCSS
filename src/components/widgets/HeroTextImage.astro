---
import Image from '~/components/common/Image.astro';
// import Button from '~/components/ui/Button.astro';
import { twMerge } from 'tailwind-merge';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  // tagline = await Astro.slots.render('tagline'),

  // content = await Astro.slots.render('content'),
  // actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),

  classes = {},
  isReversed = false,

  id,
} = Astro.props;

const { container: containerClass = '' } = classes;
---

<section class={twMerge('not-prose', containerClass)} {...id ? { id } : {}}>
  <div class="max-w-7xl px-5 md:px-16 py-16 md:py-28">
    <div class="pt-0 pointer-events-none"></div>
    <div
      class={twMerge('flex flex-col md:flex-row gap-12 md:gap-20 bg-teal-300', isReversed ? 'md:flex-row-reverse' : '')}
    >
      <div class="basis-1/2 flex flex-col justify-center bg-red-400">
        <!-- {tagline && <p class="text-base text-secondary" set:html={tagline} />} -->
        <div class="flex flex-col gap-3 md:gap-6 bg-blue-400">
          {title && <h3 class="" set:html={title} />}
          {subtitle && <p class="text-lg text-primary" set:html={subtitle} />}
        </div>
        <!-- <div class="max-w-3xl mx-auto lg:max-w-none">
          {subtitle && <p class="text-xl text-primary dark:text-slate-300" set:html={subtitle} />}
          {
            actions && (
              <div class="max-w-xs sm:max-w-md flex flex-nowrap flex-row gap-[1.5rem] mt-10">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex my-auto">
                      <Button {...(action || {})} class="w-full text-base" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          }
        </div> -->
        <!-- {content && <Fragment set:html={content} />} -->
      </div>
      {
        image && (
          <div class="basis-1/2">
            {typeof image === 'string' ? (
              <Fragment set:html={image} />
            ) : (
              <Image
                class="mx-auto w-full"
                widths={[400, 768, 1024, 2040]}
                sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                loading="eager"
                width={1024}
                height={640}
                {...image}
              />
            )}
          </div>
        )
      }
    </div>
  </div>
</section>
