---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  // isSticky = false,
  // isDark = false,
  isFullWidth = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    'sticky top-0 z-40 md:flex h-16 md:h-[4.5rem] bg-white/75 border-b border-primary transition-[opacity] backdrop-blur-[4.5px] ease-in-out',
  ]}
  {...id ? { id } : {}}
  data-aw-sticky-header
>
  <div
    class:list={[
      'relative h-full mx-auto pl-5 pr-3 md:px-16',
      {
        'md:flex md:justify-between': position !== 'center',
      },
      {
        'md:grid md:grid-cols-6 md:items-center': position === 'center',
      },
      {
        'md:w-[1440px]': !isFullWidth,
      },
    ]}
  >
    <div class="flex justify-between items-center pt-2 md:pt-0">
      <a href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="md:hidden">
        <ToggleMenu />
      </div>
    </div>
    <!-- Navigation Desktop & Mobile -->
    <nav
      class="items-center w-full md:w-auto hidden md:flex overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:justify-self-center md:col-span-4"
      aria-label="Main navigation"
    >
      <ul class="flex flex-col md:flex-row md:self-center gap-6 px-5 text-black max-md:text-2xl">
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button type="button" class="hover:text-link flex items-center">
                    {text} <Icon name="tabler:chevron-down" class="w-6 h-6 ml-0.5 hidden md:inline" />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md rounded md:absolute md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl max-md:text-lg">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'first:rounded-t last:rounded-b md:hover:bg-secondary hover:text-link pl-2 py-2 block whitespace-no-wrap',
                            { 'aw-link-active': href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={['hover:text-link flex items-center', { 'aw-link-active': href === currentPath }]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>

      <Button variant="primary" text="Contact Us" class="md:hidden mx-5 mt-6 text-base w-auto" />
    </nav>
    <!-- Contact Us -->
    <div class="hidden md:flex md:justify-self-end">
      {
        actions?.length ? (
          <span class="hidden md:flex">
            {actions.map((btnProps) => (
              <Button {...btnProps} class="text-base w-auto" />
            ))}
          </span>
        ) : (
          ''
        )
      }
    </div>
  </div>
</header>
